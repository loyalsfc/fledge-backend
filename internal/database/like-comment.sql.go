// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: like-comment.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const decreaseCommentLikeCount = `-- name: DecreaseCommentLikeCount :one
UPDATE comments
    SET likes_count = likes_count - 1
WHERE id = $1
RETURNING likes_count, username
`

type DecreaseCommentLikeCountRow struct {
	LikesCount int32
	Username   string
}

func (q *Queries) DecreaseCommentLikeCount(ctx context.Context, id uuid.UUID) (DecreaseCommentLikeCountRow, error) {
	row := q.db.QueryRowContext(ctx, decreaseCommentLikeCount, id)
	var i DecreaseCommentLikeCountRow
	err := row.Scan(&i.LikesCount, &i.Username)
	return i, err
}

const increaseCommentLikeCount = `-- name: IncreaseCommentLikeCount :one
UPDATE comments
    SET likes_count = likes_count + 1
WHERE id = $1
RETURNING likes_count, username, comment_text
`

type IncreaseCommentLikeCountRow struct {
	LikesCount  int32
	Username    string
	CommentText string
}

func (q *Queries) IncreaseCommentLikeCount(ctx context.Context, id uuid.UUID) (IncreaseCommentLikeCountRow, error) {
	row := q.db.QueryRowContext(ctx, increaseCommentLikeCount, id)
	var i IncreaseCommentLikeCountRow
	err := row.Scan(&i.LikesCount, &i.Username, &i.CommentText)
	return i, err
}

const likeComment = `-- name: LikeComment :exec

INSERT INTO comment_likes (
    username, comment_id
) VALUES (
    $1, $2
)
`

type LikeCommentParams struct {
	Username  string
	CommentID uuid.UUID
}

func (q *Queries) LikeComment(ctx context.Context, arg LikeCommentParams) error {
	_, err := q.db.ExecContext(ctx, likeComment, arg.Username, arg.CommentID)
	return err
}

const removeCommentLike = `-- name: RemoveCommentLike :exec
DELETE FROM comment_likes
    WHERE username = $1 AND comment_id = $2
`

type RemoveCommentLikeParams struct {
	Username  string
	CommentID uuid.UUID
}

func (q *Queries) RemoveCommentLike(ctx context.Context, arg RemoveCommentLikeParams) error {
	_, err := q.db.ExecContext(ctx, removeCommentLike, arg.Username, arg.CommentID)
	return err
}
