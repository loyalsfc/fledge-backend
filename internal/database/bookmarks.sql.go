// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: bookmarks.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const addBookmarks = `-- name: AddBookmarks :exec
INSERT INTO bookmarks(
    username, post_id
) VALUES (
    $1, $2
)
RETURNING username, post_id
`

type AddBookmarksParams struct {
	Username string
	PostID   uuid.UUID
}

func (q *Queries) AddBookmarks(ctx context.Context, arg AddBookmarksParams) error {
	_, err := q.db.ExecContext(ctx, addBookmarks, arg.Username, arg.PostID)
	return err
}

const removeBookmarks = `-- name: RemoveBookmarks :exec
DELETE FROM bookmarks
WHERE username = $1 AND post_id = $2
`

type RemoveBookmarksParams struct {
	Username string
	PostID   uuid.UUID
}

func (q *Queries) RemoveBookmarks(ctx context.Context, arg RemoveBookmarksParams) error {
	_, err := q.db.ExecContext(ctx, removeBookmarks, arg.Username, arg.PostID)
	return err
}

const updateBookmarksDecrease = `-- name: UpdateBookmarksDecrease :one
UPDATE posts
    SET bookmarks_count = bookmarks_count - 1
WHERE id = $1
RETURNING bookmarks_count
`

func (q *Queries) UpdateBookmarksDecrease(ctx context.Context, id uuid.UUID) (int32, error) {
	row := q.db.QueryRowContext(ctx, updateBookmarksDecrease, id)
	var bookmarks_count int32
	err := row.Scan(&bookmarks_count)
	return bookmarks_count, err
}

const updateBookmarksIncrease = `-- name: UpdateBookmarksIncrease :one
UPDATE posts
    SET bookmarks_count = bookmarks_count + 1
WHERE id = $1
RETURNING bookmarks_count
`

func (q *Queries) UpdateBookmarksIncrease(ctx context.Context, id uuid.UUID) (int32, error) {
	row := q.db.QueryRowContext(ctx, updateBookmarksIncrease, id)
	var bookmarks_count int32
	err := row.Scan(&bookmarks_count)
	return bookmarks_count, err
}
